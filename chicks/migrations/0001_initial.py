# Generated by Django 5.0.3 on 2024-03-30 11:26

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContractType',
            fields=[
                ('ct_code', models.CharField(help_text='User supplied code for a contract type. Also the primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='Contract Type')),
                ('ct_desc', models.CharField(blank=True, help_text='The name of the contract type', max_length=50, null=True, verbose_name='Description')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Contract Type',
                'ordering': ['ct_code'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('co_code', models.CharField(help_text='User supplied code for a country. Also the primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='Country')),
                ('co_name', models.CharField(blank=True, help_text='The name of the Country', max_length=50, null=True, verbose_name='Country')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Country',
                'ordering': ['co_name'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('gd_code', models.CharField(help_text='User supplied code for a grade. Also the primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='grade')),
                ('gd_name', models.CharField(blank=True, help_text='The name of the grade', max_length=50, null=True, verbose_name='Description')),
                ('gd_min_sal', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Minimum salary for grade', max_digits=15, null=True, verbose_name='Min Salary')),
                ('gd_max_sal', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Max salary for grade', max_digits=15, null=True, verbose_name='Max Salary')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'grade',
                'ordering': ['gd_code'],
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('ql_code', models.CharField(help_text='User supplied code for a qualification. Also the primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='Qualification')),
                ('ql_desc', models.CharField(blank=True, help_text='The name of the qualification', max_length=100, null=True, verbose_name='Description')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Qualification',
                'ordering': ['ql_code'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('dt_code', models.CharField(help_text='User supplied code for a village. Also the primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='District')),
                ('dt_name', models.CharField(blank=True, help_text='The name of the district', max_length=50, null=True, verbose_name='District')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('dt_co_code', models.ForeignKey(help_text='Country in which this district falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'District',
                'ordering': ['dt_name'],
            },
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('hd_num', models.AutoField(help_text='System generated number uniquely identifying a holding', primary_key=True, serialize=False, verbose_name='Number')),
                ('hd_code', models.CharField(help_text='User assigned code for the holding', max_length=100, verbose_name='Code')),
                ('hd_size', models.DecimalField(decimal_places=2, default=0, help_text='Total Hactares - put 0.1 for smallholdings', max_digits=15, verbose_name='Hactares')),
                ('hd_trans_date', models.DateTimeField(help_text='Date Commenced', verbose_name='Commencement Date')),
                ('hd_name', models.CharField(help_text='The name of the holding', max_length=200, verbose_name='Name')),
                ('hd_type', models.CharField(choices=[('1', 'Owned'), ('2', 'Leased')], help_text='Type of the holding', max_length=1, verbose_name='Type')),
                ('hd_desc', models.CharField(help_text='A description of the holding', max_length=200, verbose_name='Desc')),
                ('hd_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('hd_dt_code', models.ForeignKey(help_text='District where the holding is found', on_delete=django.db.models.deletion.CASCADE, to='chicks.district', verbose_name='District')),
            ],
            options={
                'verbose_name': 'Holding',
                'ordering': ['hd_num'],
            },
        ),
        migrations.CreateModel(
            name='HoldingInstance',
            fields=[
                ('hi_num', models.AutoField(help_text='System generated number uniquely identifying a holding', primary_key=True, serialize=False, verbose_name='Number')),
                ('hi_code', models.CharField(help_text='User assigned code for the holding instance', max_length=100, verbose_name='Code')),
                ('hi_trans_date', models.DateTimeField(blank=True, help_text='Transaction date of the instance', null=True, verbose_name='Trans Date')),
                ('hi_start_date', models.DateTimeField(default=datetime.date.today, help_text='Start date of the instance', verbose_name='Start Date')),
                ('hi_end_date', models.DateTimeField(default=datetime.date.today, help_text='End date of the instance', verbose_name='End Date')),
                ('hi_use_type', models.CharField(choices=[('1', 'Animal'), ('2', 'Cropping'), ('2', 'Other')], help_text='Type of the holding instance', max_length=1, verbose_name='Type')),
                ('hi_desc', models.CharField(help_text='The description of the holding instance', max_length=200, verbose_name='Description')),
                ('hi_size', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Size of instance', max_digits=10, null=True, verbose_name='Size')),
                ('hi_pprice', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Planned Price of instance', max_digits=10, null=True, verbose_name='Planned Price')),
                ('hi_aprice', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Actual Price of instance', max_digits=10, null=True, verbose_name='Actual Price')),
                ('hi_psize', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Planned Size of instance', max_digits=10, null=True, verbose_name='Planned Size')),
                ('hi_asize', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Actual Size of instance', max_digits=10, null=True, verbose_name='Actual Size')),
                ('hi_tqty', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Target Output of instance', max_digits=10, null=True, verbose_name='Target Output')),
                ('hi_aqty', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Actual Output of instance', max_digits=10, null=True, verbose_name='Actual Output')),
                ('hi_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('hi_hd_num', models.ForeignKey(help_text='Foreign key to holding', on_delete=django.db.models.deletion.CASCADE, to='chicks.holding', verbose_name='Holding Instance')),
            ],
            options={
                'verbose_name': 'Holding Instance',
                'ordering': ['hi_num'],
            },
        ),
        migrations.CreateModel(
            name='CustOrders',
            fields=[
                ('od_num', models.AutoField(help_text='System generated number uniquely identifying an output', primary_key=True, serialize=False, verbose_name='Number')),
                ('od_Custname', models.CharField(blank=True, help_text='Customer s name', max_length=50, null=True, verbose_name='Customer')),
                ('od_phone', models.CharField(blank=True, help_text='Customer s contact phone', max_length=50, null=True, verbose_name='Contact Phone')),
                ('od_item', models.CharField(blank=True, choices=[('C', 'Chickens'), ('P', 'Pork'), ('O', 'Other')], help_text='Order Item', max_length=50, null=True, verbose_name='Item')),
                ('od_qty', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Quantity of output', max_digits=10, null=True, verbose_name='Quantity')),
                ('od_unit_p', models.DecimalField(decimal_places=2, default=0, help_text='Price', max_digits=10, null=True, verbose_name='Unit Price')),
                ('od_unit', models.CharField(help_text='The unit of measure', max_length=20, verbose_name='Unit')),
                ('od_grade', models.CharField(help_text='The grade of the output', max_length=100, verbose_name='Description')),
                ('od_notes', models.CharField(help_text='The description of the output', max_length=200, verbose_name='Description')),
                ('od_trans_date', models.DateTimeField(help_text='Date output waa acquired', verbose_name='Trans requested')),
                ('od_status_date', models.DateTimeField(help_text='Status date of output', verbose_name='Date requested')),
                ('ot_status', models.CharField(choices=[('1', 'Pending'), ('2', 'Confirmed')], help_text='Status of the order', max_length=1, verbose_name='Status')),
                ('ot_paid', models.CharField(choices=[('1', 'Paid'), ('2', 'Outstanding')], help_text='Payment status of the order', max_length=1, verbose_name='Payment Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('od_hi_num', models.ForeignKey(help_text='Foreign key to holding instance', on_delete=django.db.models.deletion.CASCADE, to='chicks.holdinginstance', verbose_name='Holding Instance')),
            ],
            options={
                'verbose_name': 'CustOrders',
                'ordering': ['od_num'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('ac_num', models.AutoField(help_text='System generated number uniquely identifying an activity', primary_key=True, serialize=False, verbose_name='Number')),
                ('ac_type', models.CharField(choices=[('1', 'Clearing'), ('2', 'Preparation'), ('3', 'Planting'), ('4', 'Production'), ('5', 'Packaging'), ('6', 'Storage'), ('7', 'Starting'), ('8', 'Growing'), ('9', 'Finishing')], help_text='Type of the activity', max_length=1, verbose_name='Type')),
                ('ac_day', models.IntegerField(blank=True, default=0, help_text='Day Count', null=True, verbose_name='Day Number')),
                ('ac_date', models.DateTimeField(blank=True, help_text='Planned start date of activity', null=True, verbose_name='Date Start')),
                ('ac_o_qty', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Opening Quantity', max_digits=10, null=True, verbose_name='Open Qty')),
                ('ac_c_qty', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Closing Quantity', max_digits=10, null=True, verbose_name='Closing Qty')),
                ('ac_t_wqt', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Target Weight', max_digits=10, null=True, verbose_name='Target Weight')),
                ('ac_a_wqt', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Target Weight', max_digits=10, null=True, verbose_name='Actual Weight')),
                ('ac_morlity', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Day s Motality', max_digits=10, null=True, verbose_name='Mortality')),
                ('ac_e_cost', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Est Cost', max_digits=10, null=True, verbose_name='Est Cost')),
                ('ac_desc', models.CharField(blank=True, help_text='The description of the activity', max_length=200, null=True, verbose_name='Description')),
                ('ac_pstart_date', models.DateTimeField(blank=True, help_text='Planned start date of activity', null=True, verbose_name='Planned Start')),
                ('ac_pend_date', models.DateTimeField(blank=True, help_text='Planned end date of activity', null=True, verbose_name='Planned End')),
                ('ac_astart_date', models.DateTimeField(blank=True, help_text='Actual start date of activity', null=True, verbose_name='Actual Start')),
                ('ac_aend_date', models.DateTimeField(blank=True, help_text='Actual end date of activity', null=True, verbose_name='Actual End')),
                ('ac_status', models.CharField(choices=[('1', 'Clearing'), ('2', 'Preparation'), ('3', 'Planting'), ('4', 'Production'), ('5', 'Packaging'), ('6', 'Storage'), ('7', 'Starting'), ('8', 'Growing'), ('9', 'Finishing')], help_text='Status of the activity', max_length=1, verbose_name='Status')),
                ('ac_remark', models.CharField(blank=True, help_text='The remarks about the activity', max_length=200, null=True, verbose_name='Remarks')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('ac_hi_num', models.ForeignKey(help_text='Foreign key to holding instance', on_delete=django.db.models.deletion.CASCADE, to='chicks.holdinginstance', verbose_name='Holding Instance')),
            ],
            options={
                'verbose_name': 'Activity',
                'ordering': ['ac_num'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('mm_num', models.AutoField(help_text='System generated number uniquely identifying the member', primary_key=True, serialize=False, verbose_name='Number')),
                ('mm_code', models.CharField(help_text='A number/code by whhich member is identified by', max_length=100, verbose_name='Assigned Number')),
                ('mm_trade_name', models.CharField(help_text='The member s trade name', max_length=200, verbose_name='Trade Name')),
                ('mm_name', models.CharField(help_text='The member s  name', max_length=200, verbose_name='Name')),
                ('mm_comm_date', models.DateTimeField(help_text='Date member commenced operations', verbose_name='Commencement Date')),
                ('mm_phone', models.IntegerField(help_text='member s phone number', verbose_name='Phone')),
                ('mm_mobile', models.IntegerField(help_text='member s phone number', verbose_name='Phone')),
                ('mm_email', models.EmailField(help_text='member s email address', max_length=100, verbose_name='Email')),
                ('mm_wsite', models.CharField(help_text='member s website', max_length=200, verbose_name='Website')),
                ('mm_contact', models.CharField(help_text='First contact person', max_length=100, verbose_name='Contact Person1')),
                ('mm_phone1', models.IntegerField(help_text='First contact person phone number', verbose_name='Phone')),
                ('mm_paddress1', models.CharField(help_text='The member s Physical Address line 1', max_length=200, verbose_name='Physical Address')),
                ('mm_paddress2', models.CharField(help_text='The member s Physical Address line 2', max_length=200, verbose_name='Physical Address')),
                ('mm_reg_date', models.DateTimeField(help_text='Date member was registered with institution', verbose_name='Date of Registration')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('mm_co_code', models.ForeignKey(help_text='Country\tto which the member belongs', on_delete=django.db.models.deletion.CASCADE, to='chicks.country', verbose_name='Country')),
                ('mm_dt_code', models.ForeignKey(help_text='District to which the member belongs', on_delete=django.db.models.deletion.CASCADE, to='chicks.district', verbose_name='District')),
            ],
            options={
                'verbose_name': 'Member',
                'ordering': ['mm_num'],
            },
        ),
        migrations.AddField(
            model_name='holding',
            name='hd_mm_num',
            field=models.ForeignKey(default=1, help_text='Foreign key to holder/owner/employee', on_delete=django.db.models.deletion.CASCADE, to='chicks.member', verbose_name='Member'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('nt_num', models.AutoField(help_text='System generated number uniquely identifying a note', primary_key=True, serialize=False, verbose_name='Number')),
                ('nt_comment', models.CharField(help_text='The description of the activity', max_length=200, verbose_name='Description')),
                ('nt_remark', models.CharField(help_text='The description of the activity', max_length=200, verbose_name='Description')),
                ('nt_trans_date', models.DateTimeField(help_text='Transaction date of notes', verbose_name='Trans Start')),
                ('nt_type', models.CharField(choices=[('1', 'Noting'), ('2', 'Instructive')], help_text='Type of the notes', max_length=1, verbose_name='Type')),
                ('nt_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], help_text='Status of the notes', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('nt_ac_num', models.ForeignKey(help_text='Foreign key to Activity', on_delete=django.db.models.deletion.CASCADE, to='chicks.activity', verbose_name='Activity')),
            ],
            options={
                'verbose_name': 'Note',
                'ordering': ['nt_num'],
            },
        ),
        migrations.CreateModel(
            name='OutPut',
            fields=[
                ('op_num', models.AutoField(help_text='System generated number uniquely identifying an output', primary_key=True, serialize=False, verbose_name='Number')),
                ('op_qty', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Quantity of output', max_digits=10, null=True, verbose_name='Quantity')),
                ('op_unit', models.CharField(help_text='The unit of measure', max_length=20, verbose_name='Unit')),
                ('op_grade', models.CharField(help_text='The grade of the output', max_length=100, verbose_name='Description')),
                ('op_description', models.CharField(help_text='The description of the output', max_length=200, verbose_name='Description')),
                ('op_trans_date', models.DateTimeField(help_text='Date output waa acquired', verbose_name='Trans requested')),
                ('op_status_date', models.DateTimeField(help_text='Status date of output', verbose_name='Date requested')),
                ('ot_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], help_text='Status of the notes', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('op_hi_num', models.ForeignKey(help_text='Foreign key to Holding Instance', on_delete=django.db.models.deletion.CASCADE, to='chicks.holdinginstance', verbose_name='Holding Instance')),
            ],
            options={
                'verbose_name': 'Output',
                'ordering': ['op_num'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('ee_num', models.AutoField(help_text='System generated number uniquely identifying an employee', primary_key=True, serialize=False, verbose_name='Number')),
                ('ee_fname', models.CharField(help_text='First Name', max_length=50, verbose_name='First Name')),
                ('ee_onames', models.CharField(blank=True, help_text='Other names', max_length=30, null=True, verbose_name='Other Names')),
                ('ee_initials', models.CharField(help_text='Initials', max_length=10, verbose_name='Initials')),
                ('ee_sname', models.CharField(help_text='Surname', max_length=50, verbose_name='Surname')),
                ('ee_nid', models.CharField(blank=True, help_text='National identification', max_length=20, null=True, verbose_name='National ID')),
                ('ee_pp_num', models.CharField(blank=True, help_text='Pasport number', max_length=30, null=True, verbose_name='Passport Number')),
                ('ee_dl_num', models.CharField(blank=True, help_text='Driver s licence number', max_length=30, null=True, verbose_name='Driver licence')),
                ('ee_ss_num', models.CharField(blank=True, help_text='Social security number', max_length=30, null=True, verbose_name='Social Security')),
                ('ee_dob', models.DateTimeField(help_text='Date of birth', verbose_name='Date Of Birth')),
                ('ee_date_joined', models.DateTimeField(help_text='Date of joining', verbose_name='Date Joined')),
                ('ee_gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], help_text='The gender', max_length=1, null=True, verbose_name='Gender')),
                ('ee_salute', models.CharField(blank=True, choices=[('1', 'Miss'), ('2', 'Mrs'), ('3', 'Ms'), ('4', 'Mr'), ('5', 'Dr'), ('6', 'Prof'), ('7', 'Hon')], help_text='The salutation', max_length=1, null=True, verbose_name='Salutation')),
                ('ee_status', models.CharField(blank=True, choices=[('1', 'On'), ('0', 'Off')], help_text='The general status', max_length=30, null=True, verbose_name='Record Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('ee_ct_code', models.ForeignKey(help_text='The type of contract held', on_delete=django.db.models.deletion.CASCADE, to='chicks.contracttype', verbose_name='Contract Type')),
                ('ee_gd_code', models.ForeignKey(help_text='Current grade', on_delete=django.db.models.deletion.CASCADE, to='chicks.grade', verbose_name='Grade')),
                ('ee_mm_num', models.ForeignKey(help_text='Member', on_delete=django.db.models.deletion.CASCADE, to='chicks.member', verbose_name='Member')),
                ('ee_ql_code', models.ForeignKey(help_text='Highest Qualification', on_delete=django.db.models.deletion.CASCADE, to='chicks.qualification', verbose_name='Qualification')),
            ],
            options={
                'verbose_name': 'Employee',
                'ordering': ['ee_num'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('rg_code', models.CharField(help_text='User supplied code for a region. Also the primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='Region')),
                ('rg_name', models.CharField(blank=True, help_text='The name of the region', max_length=50, null=True, verbose_name='Region')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('rg_co_code', models.ForeignKey(help_text='Country in which this region falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Region',
                'ordering': ['rg_name'],
            },
        ),
        migrations.AddField(
            model_name='member',
            name='mm_rg_code',
            field=models.ForeignKey(help_text='Region to which the member belongs', on_delete=django.db.models.deletion.CASCADE, to='chicks.region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='holding',
            name='hd_rg_code',
            field=models.ForeignKey(help_text='Region where the holding is found', on_delete=django.db.models.deletion.CASCADE, to='chicks.region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='district',
            name='dt_rg_code',
            field=models.ForeignKey(help_text='Region in which this district falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.region', verbose_name='Region'),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('rs_num', models.AutoField(help_text='System generated number uniquely identifying a resourse', primary_key=True, serialize=False, verbose_name='Number')),
                ('rs_unit', models.CharField(help_text='The unit of measure', max_length=20, verbose_name='Unit')),
                ('rs_desc', models.CharField(help_text='The description of the activity', max_length=200, verbose_name='Description')),
                ('rs_required', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Resources required', max_digits=10, null=True, verbose_name='Required')),
                ('rs_provided', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Actual Price of instance', max_digits=10, null=True, verbose_name='Provided')),
                ('rs_date_provided', models.DateTimeField(help_text='Date resources were provided', verbose_name='Date Provided')),
                ('rs_req_date', models.DateTimeField(help_text='Date Resources were requested', verbose_name='Date requested')),
                ('rs_approved', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Status of the notes', max_length=1, verbose_name='Approved')),
                ('rs_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], help_text='Status of the notes', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('rs_ac_num', models.ForeignKey(help_text='Foreign key to Activity', on_delete=django.db.models.deletion.CASCADE, to='chicks.activity', verbose_name='Activity')),
            ],
            options={
                'verbose_name': 'Resource',
                'ordering': ['rs_num'],
            },
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('to_code', models.CharField(help_text='User supplied code for a town. Also the primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='Town')),
                ('to_name', models.CharField(blank=True, help_text='The name of the town', max_length=50, null=True, verbose_name='Town')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('to_rg_code', models.ForeignKey(help_text='Town in which this district falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.region', verbose_name='Region')),
            ],
            options={
                'verbose_name': 'Town',
                'ordering': ['to_name'],
            },
        ),
        migrations.AddField(
            model_name='member',
            name='mm_to_code',
            field=models.ForeignKey(help_text='Town to which the member belongs', on_delete=django.db.models.deletion.CASCADE, to='chicks.town', verbose_name='Town'),
        ),
        migrations.AddField(
            model_name='district',
            name='dt_to_code',
            field=models.ForeignKey(help_text='Town in which this district falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.town', verbose_name='Town'),
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('vg_code', models.CharField(help_text='User supplied code for a village. Also the primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='Village')),
                ('vg_name', models.CharField(blank=True, help_text='The name of the village', max_length=50, null=True, verbose_name='Name')),
                ('vg_mobile', models.IntegerField(blank=True, help_text='The contact phone', null=True, verbose_name='Phone')),
                ('vg_email', models.EmailField(blank=True, help_text='The email address', max_length=50, null=True, verbose_name='Email')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('vg_dt_code', models.ForeignKey(help_text='District in which this village falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.district', verbose_name='District')),
                ('vg_rg_code', models.ForeignKey(help_text='Region in which this village falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.region', verbose_name='Region')),
                ('vg_to_code', models.ForeignKey(help_text='Town in which this village falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.town', verbose_name='Town')),
            ],
            options={
                'verbose_name': 'Village',
                'ordering': ['vg_name'],
            },
        ),
        migrations.AddField(
            model_name='member',
            name='mm_vg_code',
            field=models.ForeignKey(help_text='Village to which the member belongs', on_delete=django.db.models.deletion.CASCADE, to='chicks.village', verbose_name='Village'),
        ),
        migrations.AddField(
            model_name='holding',
            name='hd_vg_code',
            field=models.ForeignKey(help_text='Village where the holding is found', on_delete=django.db.models.deletion.CASCADE, to='chicks.village', verbose_name='Village'),
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('wd_code', models.CharField(help_text='User supplied code for a ward. Also the primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='Ward')),
                ('wd_name', models.CharField(blank=True, help_text='The name of the ward', max_length=50, null=True, verbose_name='Ward')),
                ('wd_chief', models.CharField(blank=True, help_text='The name of the chief under which the ward falls', max_length=50, null=True, verbose_name='Chief')),
                ('wd_mobile', models.IntegerField(blank=True, help_text='The contact phone', null=True, verbose_name='Phone')),
                ('wd_email', models.EmailField(blank=True, help_text='The email address', max_length=50, null=True, verbose_name='Email')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('wd_dt_code', models.ForeignKey(help_text='District in which this ward falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.district', verbose_name='District')),
                ('wd_rg_code', models.ForeignKey(help_text='Region in which this ward falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.region', verbose_name='Region')),
                ('wd_to_code', models.ForeignKey(help_text='Town in which this ward falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.town', verbose_name='Town')),
            ],
            options={
                'verbose_name': 'Ward',
                'ordering': ['wd_name'],
            },
        ),
        migrations.AddField(
            model_name='village',
            name='vg_wd_code',
            field=models.ForeignKey(help_text='Ward in which this village falls under', on_delete=django.db.models.deletion.CASCADE, to='chicks.ward', verbose_name='Ward'),
        ),
        migrations.AddField(
            model_name='member',
            name='mm_wd_code',
            field=models.ForeignKey(help_text='Ward to which the member belongs', on_delete=django.db.models.deletion.CASCADE, to='chicks.ward', verbose_name='Ward'),
        ),
        migrations.AddField(
            model_name='holding',
            name='hd_wd_code',
            field=models.ForeignKey(default=0, help_text='Ward where the holding is found', on_delete=django.db.models.deletion.CASCADE, to='chicks.ward', verbose_name='Ward'),
        ),
    ]
